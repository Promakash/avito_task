services:
  avito-shop-service:
    build: .
    container_name: avito-shop-service
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      user-cache:
        condition: service_healthy
    environment:
      - SHOP_CONFIG=config/docker.yml
      - AUTH_SECRET=very_secret
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=password
      - DATABASE_NAME=shop
      - DATABASE_HOST=db
      - CACHE_PORT=6379
      - CACHE_PASSWORD=redis
      - CACHE_HOST=user-cache
      - CACHE_TTL = 30m
      - CACHE_WRITE_TIMEOUT = 3s
      - CACHE_READ_TIMEOUT = 2s
    volumes:
      - ./logs/avito-shop:/app/logs
    healthcheck:
      test: curl --fail http://localhost:8080/api/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - internal

  db:
    image: postgres:15.4-alpine
    container_name: db
    environment:
      POSTGRES_DB: shop
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U postgres -d shop'"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - internal

  user-cache:
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    image: redis:latest
    container_name: user-cache
    environment:
      REDIS_PASSWORD: redis
    ports:
      - "6379:6379"
    networks:
      - internal

  tests:
    build:
      dockerfile: tests/Dockerfile
    depends_on:
      avito-shop-service:
        condition: service_healthy
    environment:
      - AUTH_SECRET=very_secret
      - API_PATH=http://avito-shop-service:8080/api
    profiles:
      - test
    networks:
      - internal

networks:
  internal:
